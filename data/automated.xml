<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <!-- ######################### SALE ORDER #############################################-->

    <!-- Al crear un presupuesto, se actualiza el estado del CRM a En Elaboración -->
    <record id="sale_order_on_create" model="base.automation">
        <field name="name">Presupuesto Creado</field>
        <field name="model_id" ref="sale.model_sale_order"/>
        <field name="state">code</field>
        <field name="code">
record.opportunity_id.write({'stage_id': 2})
        </field>
        <field name="trigger">on_create</field>
        <field name="filter_domain">[("opportunity_id","!=",False)]</field>
        <field name="active">1</field>
    </record>

    <!-- Al enviar un presupuesto, se actualiza el estado del CRM a Enviado -->
    <record id="sale_order_on_write_sent" model="base.automation">
        <field name="name">Presupuesto Enviado</field>
        <field name="model_id" ref="sale.model_sale_order"/>
        <field name="state">code</field>
        <field name="code">
expected_revenue = record.amount_untaxed
record.opportunity_id.write({'stage_id': 3, 'expected_revenue': expected_revenue})
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('sale.field_sale_order__state'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">["&amp;",('state', '=', 'sent'),("opportunity_id","!=",False)]</field>
        <field name="active">1</field>
    </record> 

    <!-- Al confirmar un presupuesto, se actualiza el estado del CRM a Ganado -->
    <record id="sale_order_on_write_confirmed" model="base.automation">
        <field name="name">Presupuesto Confirmado</field>
        <field name="model_id" ref="sale.model_sale_order"/>
        <field name="state">code</field>
        <field name="code">
for rec in record.opportunity_id.order_ids:
  if rec.state in ('draft', 'sent'):
    rec.write({'state': 'cancel'})
expected_revenue = record.amount_untaxed
record.opportunity_id.write({'stage_id': 4, 'probability': 100, 'expected_revenue': expected_revenue})
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('sale.field_sale_order__state'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">["&amp;",("state","=","sale"),("opportunity_id","!=",False)]</field>
        <field name="active">1</field>
    </record>

    <!-- Al cancelar un presupuesto, se archiva el registro -->
    <record id="sale_order_on_write_cancel" model="base.automation">
        <field name="name">Presupuesto Cancelado</field>
        <field name="model_id" ref="sale.model_sale_order"/>
        <field name="state">code</field>
        <field name="code">
record.write({'active': False})
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('sale.field_sale_order__state'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">[('state', '=', 'cancel')]</field>
        <field name="active">1</field>
    </record>
  
    <!-- ######################### CRM #############################################-->

    <!-- Validar cambio de etapa de Prospección a Elaboración -->
    <record id="crm_on_write_prospection_to_elaboration" model="base.automation">
        <field name="name">Validar prospeccion a elaboracion</field>
        <field name="model_id" ref="website_crm.model_crm_lead"/>
        <field name="state">code</field>
        <field name="code">
if not record.order_ids:
  raise UserError('Movimiento inválido, debe crear un presupuesto')
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('crm.field_crm_lead__stage_id'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">[("stage_id","=",2)]</field>
        <field name="active">1</field>
    </record>

    <!-- Validar cambio de etapa de Elaboración a Enviada-->
    <record id="crm_on_write_elaboration_to_sent" model="base.automation">
        <field name="name">Validar elaboracion a enviado</field>
        <field name="model_id" ref="website_crm.model_crm_lead"/>
        <field name="state">code</field>
        <field name="code">
if record.order_ids:
  for rec in record.order_ids:
    if rec.state != 'sent':
      raise UserError('Movimiento inválido, debe haber enviado un presupuesto')
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('crm.field_crm_lead__stage_id'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">[("stage_id","=",3)]</field>
        <field name="active">1</field>
    </record>

    <!-- Validar cambio de etapa de oportunidad Enviada a oportunidad Ganada -->
    <record id="crm_on_write_won_validation" model="base.automation">
        <field name="name">Validar oportunidad ganada</field>
        <field name="model_id" ref="website_crm.model_crm_lead"/>
        <field name="state">code</field>
        <field name="code">
for rec in record.order_ids:
  if rec.state in ('draft','sent'):
    raise UserError('Movimiento inválido, para dar por ganado una oportunidad, debes confirmar un presupuesto')
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('crm.field_crm_lead__stage_id'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">[("stage_id","=",4)]</field>
        <field name="active">1</field>
    </record>
    
    <!-- Al dar por perdido una oportunidad, se actualiza la etapa a perdido -->
    <record id="crm_on_write_opportunity_lost" model="base.automation">
        <field name="name">Oportunidad perdida</field>
        <field name="model_id" ref="website_crm.model_crm_lead"/>
        <field name="state">code</field>
        <field name="code">
record.order_ids.write({'state': 'cancel'})
record.write({'stage_id': 6, 'probability': 0})
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('crm.field_crm_lead__stage_id'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">[("stage_id","=",6)]</field>
        <field name="active">1</field>
    </record>

    <!-- Al dar por cancelado una oportunidad, se actualiza la etapa a cancelado 
    <record id="crm_on_write_opportunity_cancel" model="base.automation">
        <field name="name">Oportunidad cancelada</field>
        <field name="model_id" ref="website_crm.model_crm_lead"/>
        <field name="state">code</field>
        <field name="code">
record.order_ids.write({'state': 'cancel'})
record.write({'stage_id': 7, 'probability': 0})
        </field>
        <field name="trigger_field_ids" eval="[(4,ref('crm.field_crm_lead__stage_id'))]"></field>
        <field name="trigger">on_write</field>
        <field name="filter_domain">[("stage_id","=",7)]</field>
        <field name="active">1</field>
    </record>
    -->

</odoo>
